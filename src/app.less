@import "_normalize";

#colors() {
  action: #ff00af;
  extended: #5fd7ff;
  custom: #00afff;
  failed: #870000;
  head: #af87d7;
  inactive: #9e9e9e;
  light-terminal: #575f66;
  upstream: #ffaf87;
  staged: #87ff87;
  succeeded: #5fd700;
  tag: #5fffd7;
  terminal: #c7c7c7;
  unstaged: #d70087;
  userhost: #87afaf;
}

input[type="color"][value=""] {
  // visibility: hidden;
}

#prompt {
  color: var(--color-terminal);
  font-size: 20rem / 16;
  line-height: 1.2;
  position: sticky;
  top: 20px;

  &,
  * {
    display: inline;
  }

  &:not(.initialized) {
    visibility: hidden;
  }

  &.checked-hide-inactive-extended-status {
    &:not(.checked-stash) #stash,
    &:not(.checked-assume-unchanged) #assume-unchanged,
    &:not(.checked-skip-worktree) #skip-worktree {
      display: none;
    }
  }
  &:not(.checked-show-inactive-status) {
    &:not(.checked-untracked) #untracked,
    &:not(.checked-conflicted) #conflicted,
    &:not(.checked-unstaged-deleted) #unstaged-deleted,
    &:not(.checked-unstaged-modified) #unstaged-modified,
    &:not(.checked-new) #new,
    &:not(.checked-staged-deleted) #staged-deleted,
    &:not(.checked-staged-modified)  #staged-modified {
      display: none;
    }
  }
  &.checked-hide-inactive-ahead-behind {
    &:not(.checked-ahead) #ahead,
    &:not(.checked-behind) #behind {
      display: none;
    }
  }
}
.checked-before #before,
.checked-after #after,
.checked-stash #stash,
.checked-assume-unchanged #assume-unchanged,
.checked-skip-worktree #skip-worktree,
.checked-untracked #untracked,
.checked-conflicted #conflicted,
.checked-unstaged-deleted #unstaged-deleted,
.checked-unstaged-modified #unstaged-modified,
.checked-new #new,
.checked-staged-deleted #staged-deleted,
.checked-staged-modified  #staged-modified {
  display: inline-flex;
}

#not-git {
  display: block;
  .checked-no-break-before-ref & {
    display: inline;
  }
}

#user {
  color: var(--color-user);
  .checked-default-host.checked-default-user & {
    display: none;
  }
}
#host {
  color: var(--color-host);
  .checked-default-host & {
    display: none;
  }
}
#custom {
  color: var(--color-custom);
  .checked-git & span::before {
    content: '/git-prompt-kit'
  }
}
#git-ref,
#git-status {
  color: var(--color-inactive);

  :not(.checked-git) > & {
    display: none !important;
  }
}
#head {
  .checked-untracked &,
  .checked-conflicted &,
  .checked-unstaged-deleted &,
  .checked-unstaged-modified &,
  .checked-new &,
  .checked-staged-deleted &,
  .checked-staged-modified & {
    color: var(--color-head)
  }
}
#branch {
  display: none;
  .checked-branch & {
    display: inline-block;
  }
}
#commit {
  display: inline-block;
  .checked-branch & {
    display: none;
  }
}
#local {
  color: var(--color-remote);
  display: none;
  .checked-branch:not(.checked-upstream) & {
    display: inline-block;
  }
}
#upstream {
  display: none;
  .checked-upstream.checked-branch & {
    display: inline-block;
  }
}
#ahead {
  .checked-ahead & {
    color: var(--color-remote);
    span::before {
      content: '2'
    }
  }
}
#behind {
  .checked-behind & {
    color: var(--color-remote);
    span::before {
      content: '3'
    }
  }
}
#remote {
  color: var(--color-remote);
  .checked-default-remote & {
    display: none;
  }
}
#upstream-branch {
  color: var(--color-remote);
  span::before {
    content: 'mains';
  }
  .checked-same-name & {
    span::before {
      content: 'main';
    }
    .checked-default-remote& {
      display: none;
    }
  }
}
#tag {
  color: var(--color-tag);

  #prompt:not(.checked-tag) & {
    display: none;
  }
}
#git-status {
  .checked-break-after-ref & {
    display: block;
  }
}
#extended {
  #prompt:not(.checked-show-extended-status) & {
    display: none;
  }
}
#stash {
  .checked-stash & {
    color: var(--color-stash)
  }
}

#assume-unchanged {
  .checked-assume-unchanged & {
    color: var(--color-assume-unchanged)
  }
}

#skip-worktree {
  .checked-skip-worktree & {
    color: var(--color-skip-worktree)
  }
}

.checked-stash #stash::before {
  content: '4'
}
.checked-assume-unchanged #assume-unchanged::before {
  content: '2'
}
.checked-skip-worktree #skip-worktree::before {
  content: '1'
}
.checked-untracked #untracked,
.checked-conflicted #conflicted,
.checked-unstaged-deleted #unstaged-deleted,
.checked-unstaged-modified #unstaged-modified {
  color: var(--color-unstaged)
}

.checked-untracked #untracked::before {
  content: '1'
}
.checked-conflicted #conflicted::before {
  content: '1'
}
.checked-unstaged-deleted #unstaged-deleted::before {
  content: '1'
}
.checked-unstaged-modified #unstaged-modified::before {
  content: '1'
}

.checked-new #new,
.checked-staged-deleted #staged-deleted,
.checked-staged-modified #staged-modified {
  color: var(--color-staged)
}
.checked-new #new::before {
  content: '1'
}
.checked-staged-deleted #staged-deleted::before {
  content: '1'
}
.checked-staged-modified #staged-modified::before {
  content: '1'
}

#action {
  color: var(--color-action);
  display: none;
  .checked-action & {
    display: inline;
  }
}

#char {
  color: var(--color-failed);
  display: block;

  &::before {
    content: '%';

    .checked-root-user & {
      content: '#';
    }
  }

  .checked-succeeded & {
    color: var(--color-succeeded);
  }
}

html,
body,
.wrapper {
  height: 100%;
}

html,
body {
  margin: 0;
  padding: 0;
}

html {
  font-size: 16px;
  font-family: 'Taviraj', serif;
}

.wrapper {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  margin: 0 auto;
  max-width: 800px;
  padding: 40px;
}

main {
  font-size: 18rem / 16;
  font-weight: 327;
}

h1 {
  font-size: 1.5rem;
  margin-bottom: 40px;
}

button {
  font-size: .9rem;
  margin-left: 5px;
}

#prompt {
  background: var(--color-background);
  box-shadow: 0 2px 4px #bcd;
  color: var(--color-text);
  display: block;
  font-family: 'Inconsolata', monospace;
  font-size: 20rem / 16;
  margin: 20px 20px 60px;
  padding: 25px 20px 20px;
}

fieldset {
  border: 1px solid #345;
  margin-bottom: 20px;
  padding: 20px;

  & & {
    border: 1px solid #abc;
  }

  & + & {
    margin-top: 40px;
  }
}

legend {
  font-weight: 600;
  padding-left: 10px;
  padding-right: 10px;
  font-size: 1.1rem;
}

.fields {
  display: grid;
  grid-gap: 20px;
  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr)) ;
}

.field {
  align-items: flex-start;
  display: flex;
  flex-direction: row-reverse;
}

.netlify-link {
  display: block;
  margin-bottom: 40px;
}

label {
  margin-left: 20px;
  flex-grow: 1;
}

a {
  color: currentColor;
  text-decoration-color: var(--color-custom);
  transition: 200ms;

  &:focus,
  &:hover {
    text-decoration-color: var(--color-action);
  }
}

footer {
  margin-top: 100px;
  padding-bottom: 20px;
}

blockquote {
  font-size: 1rem;
  margin: 0;
  padding: 20px 0 40px;

  &::before {
    content: 'ðŸ‘‰';
    display: inline-block;
    font-size: 1.6rem;
    margin-right: 10px;
    vertical-align: middle;
  }
}

kbd {
  border: 1px dotted #bbb;
  border-radius: 2px;
  font-family: 'Inconsolata', monospace;
  font-size: inherit;
  font-weight: inherit;
  padding: 2px 4px;
}

code {
  background: #efefef;
  font-family: 'Inconsolata', monospace;

  .field & {
    font-size: 0.8rem;

    &::before {
      content: '';
      display: block;
    }
  }
}

ul {
  list-style-type: circle;

  li {
    margin-bottom: 5px;
  }
}

.banner {
  background: cornsilk;
  font-weight: 700;
  line-height: 1.5;
  font-size: 20rem / 16;
  border: 3px solid var(--color-unstaged);
  margin: (120rem / 16) (20rem / 16) (40rem / 16);
  text-align: center;
  box-shadow: 0 0 0 4px #fff, 0 0 0 calc(3px + 4px) var(--color-unstaged), 0 0 #000;

  a {
    display: inline;
  }
}
